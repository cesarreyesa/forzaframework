<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.2.xsd
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
            http://grails.org/schema/gorm
            http://grails.org/schema/gorm/gorm.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:database.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${database.driverClassName}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
        <property name="maxTotal" value="100"/>
        <property name="maxIdle" value="30"/>
        <property name="maxWaitMillis" value="1000"/>
        <property name="defaultAutoCommit" value="true"/>
        <property name="removeAbandonedOnBorrow" value="true"/>
        <property name="removeAbandonedOnMaintenance" value="true"/>
        <property name="removeAbandonedTimeout" value="60"/>
    </bean>

    <!--
        - Message source for this context, loaded from localized "messages_xx" files.
    -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages" />
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <value>org.forzaframework.security.User</value>
                <value>org.forzaframework.security.Role</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.default_schema">${hibernate.schema}</prop>

                <!-- Create/update the database tables automatically when the JVM starts up -->
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl}</prop>
                <prop key="hibernate.show_sql">false</prop>
                <!-- Turn batching off for better error messages under PostgreSQL-->
                <prop key="hibernate.jdbc.batch_size">20</prop>

            </props>
        </property>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

    <!--
		Activates various annotations to be detected in bean classes:
		Spring's @Required and @Autowired, as well as JSR 250's @Resource.
	-->
    <context:annotation-config/>

    <!--
		Instruct Spring to perform declarative transaction management
		automatically on annotated classes.
	-->
    <aop:config>
        <aop:pointcut id="forzaService" expression="execution(* org.forzaframework.core.persistance.*.*(..))"/>
        <!--<aop:pointcut id="businessService" expression="execution(* com.ejemplo.service.*.*(..))"/>-->

        <aop:advisor pointcut-ref="forzaService" advice-ref="txAdvice"/>
        <!--<aop:advisor pointcut-ref="businessService" advice-ref="txAdvice"/>-->
    </aop:config>

    <tx:advice id="txAdvice">
        <tx:attributes>
            <!--<tx:method name="save*" propagation="SUPPORTS" no-rollback-for="org.springframework.orm.ObjectRetrievalFailureException" />-->
            <tx:method name="get*" propagation="SUPPORTS" no-rollback-for="org.springframework.orm.ObjectRetrievalFailureException" read-only="true" />
            <tx:method name="retrieve*" propagation="SUPPORTS" no-rollback-for="org.springframework.orm.ObjectRetrievalFailureException" read-only="true" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="*" no-rollback-for="org.springframework.orm.ObjectRetrievalFailureException" read-only="false" />
        </tx:attributes>
    </tx:advice>

    <bean id="entityManager" class="org.forzaframework.core.persistance.hibernate.EntityManagerImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


</beans>